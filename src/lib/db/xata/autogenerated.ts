// Generated by Xata Codegen 0.29.4. Modified using xata-pull.ts in script folder. Run db:xata-pull to update the schema.
import type {
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

export const tables = [
  {
    name: "blog",
    columns: [
      {
        name: "authorId",
        type: "link",
        link: { table: "user" },
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "categoryId",
        type: "link",
        link: { table: "category" },
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "content",
        type: "json",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "description",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "id",
        type: "uuid",
        notNull: true,
        unique: true,
        defaultValue: "gen_random_uuid()",
      },
      {
        name: "lastEditorId",
        type: "link",
        link: { table: "user" },
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "pinned",
        type: "bool",
        notNull: true,
        unique: false,
        defaultValue: "false",
      },
      {
        name: "tags",
        type: "json",
        notNull: true,
        unique: false,
        defaultValue: "'[]'::json",
      },
      {
        name: "thumbnailId",
        type: "link",
        link: { table: "file" },
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "title",
        type: "varchar(2048)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "visibility",
        type: "bb_dmn14vvno9023cmqul5kfd0muc_jphaeh.visibility",
        notNull: true,
        unique: false,
        defaultValue:
          "'draft'::bb_dmn14vvno9023cmqul5kfd0muc_jphaeh.visibility",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
  {
    name: "blog_like",
    columns: [
      {
        name: "blogId",
        type: "link",
        link: { table: "blog" },
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "likes",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
  {
    name: "blog_revision",
    columns: [
      {
        name: "authorId",
        type: "link",
        link: { table: "user" },
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "blogId",
        type: "link",
        link: { table: "blog" },
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "categoryId",
        type: "link",
        link: { table: "category" },
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "content",
        type: "json",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "description",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "id",
        type: "uuid",
        notNull: true,
        unique: true,
        defaultValue: "gen_random_uuid()",
      },
      {
        name: "lastEditorId",
        type: "link",
        link: { table: "user" },
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "pinned",
        type: "bool",
        notNull: true,
        unique: false,
        defaultValue: "false",
      },
      {
        name: "revision",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "tags",
        type: "json",
        notNull: true,
        unique: false,
        defaultValue: "'[]'::json",
      },
      {
        name: "thumbnailId",
        type: "link",
        link: { table: "file" },
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "title",
        type: "varchar(2048)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "visibility",
        type: "bb_dmn14vvno9023cmqul5kfd0muc_jphaeh.visibility",
        notNull: true,
        unique: false,
        defaultValue:
          "'draft'::bb_dmn14vvno9023cmqul5kfd0muc_jphaeh.visibility",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
  {
    name: "category",
    columns: [
      {
        name: "description",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "id",
        type: "uuid",
        notNull: true,
        unique: true,
        defaultValue: "gen_random_uuid()",
      },
      {
        name: "name",
        type: "varchar(2048)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "type",
        type: "bb_dmn14vvno9023cmqul5kfd0muc_jphaeh.type",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
  {
    name: "file",
    columns: [
      {
        name: "category",
        type: "bb_dmn14vvno9023cmqul5kfd0muc_jphaeh.file_category",
        notNull: false,
        unique: false,
        defaultValue:
          "'store'::bb_dmn14vvno9023cmqul5kfd0muc_jphaeh.file_category",
      },
      {
        name: "file",
        type: "json",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "id",
        type: "uuid",
        notNull: true,
        unique: true,
        defaultValue: "gen_random_uuid()",
      },
      {
        name: "originalHash",
        type: "varchar(2048)",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
  {
    name: "project",
    columns: [
      {
        name: "categoryId",
        type: "link",
        link: { table: "category" },
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "description",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "id",
        type: "uuid",
        notNull: true,
        unique: true,
        defaultValue: "gen_random_uuid()",
      },
      {
        name: "links",
        type: "json",
        notNull: false,
        unique: false,
        defaultValue: "'[]'::json",
      },
      {
        name: "position",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
      {
        name: "tags",
        type: "json",
        notNull: false,
        unique: false,
        defaultValue: "'[]'::json",
      },
      {
        name: "thumbnailId",
        type: "link",
        link: { table: "file" },
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "title",
        type: "varchar(2048)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "visibility",
        type: "bb_dmn14vvno9023cmqul5kfd0muc_jphaeh.visibility",
        notNull: true,
        unique: false,
        defaultValue:
          "'draft'::bb_dmn14vvno9023cmqul5kfd0muc_jphaeh.visibility",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
  {
    name: "session",
    columns: [
      {
        name: "expiresAt",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "userId",
        type: "link",
        link: { table: "user" },
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
  {
    name: "session_temp",
    columns: [
      {
        name: "expiresAt",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "id",
        type: "uuid",
        notNull: true,
        unique: true,
        defaultValue: "gen_random_uuid()",
      },
      {
        name: "sessionId",
        type: "link",
        link: { table: "session" },
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
  {
    name: "shortlink",
    columns: [
      {
        name: "id",
        type: "uuid",
        notNull: true,
        unique: true,
        defaultValue: "gen_random_uuid()",
      },
      {
        name: "shorten",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "url",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
  {
    name: "user",
    columns: [
      {
        name: "hashedPassword",
        type: "varchar(2048)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "id",
        type: "uuid",
        notNull: true,
        unique: true,
        defaultValue: "gen_random_uuid()",
      },
      {
        name: "role",
        type: "bb_dmn14vvno9023cmqul5kfd0muc_jphaeh.role[]",
        notNull: true,
        unique: false,
        defaultValue:
          "ARRAY['user'::bb_dmn14vvno9023cmqul5kfd0muc_jphaeh.role]",
      },
      {
        name: "twoFactorSecret",
        type: "varchar(2048)",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "username",
        type: "varchar(2048)",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
  {
    name: "user_profile",
    columns: [
      {
        name: "avatarId",
        type: "link",
        link: { table: "file" },
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "description",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "id",
        type: "uuid",
        notNull: true,
        unique: true,
        defaultValue: "gen_random_uuid()",
      },
      {
        name: "name",
        type: "varchar(2048)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "title",
        type: "varchar(2048)",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "userId",
        type: "link",
        link: { table: "user" },
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
  {
    name: "user_two_factor_backup_codes",
    columns: [
      {
        name: "codes",
        type: "varchar(2048)",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "id",
        type: "uuid",
        notNull: true,
        unique: true,
        defaultValue: "gen_random_uuid()",
      },
      {
        name: "userId",
        type: "link",
        link: { table: "user" },
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
      },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Blog = InferredTypes["blog"];
export type BlogRecord = Blog & XataRecord;

export type BlogLike = InferredTypes["blog_like"];
export type BlogLikeRecord = BlogLike & XataRecord;

export type BlogRevision = InferredTypes["blog_revision"];
export type BlogRevisionRecord = BlogRevision & XataRecord;

export type Category = InferredTypes["category"];
export type CategoryRecord = Category & XataRecord;

export type File = InferredTypes["file"];
export type FileRecord = File & XataRecord;

export type Project = InferredTypes["project"];
export type ProjectRecord = Project & XataRecord;

export type Session = InferredTypes["session"];
export type SessionRecord = Session & XataRecord;

export type SessionTemp = InferredTypes["session_temp"];
export type SessionTempRecord = SessionTemp & XataRecord;

export type Shortlink = InferredTypes["shortlink"];
export type ShortlinkRecord = Shortlink & XataRecord;

export type User = InferredTypes["user"];
export type UserRecord = User & XataRecord;

export type UserProfile = InferredTypes["user_profile"];
export type UserProfileRecord = UserProfile & XataRecord;

export type UserTwoFactorBackupCodes =
  InferredTypes["user_two_factor_backup_codes"];
export type UserTwoFactorBackupCodesRecord = UserTwoFactorBackupCodes &
  XataRecord;

export type DatabaseSchema = {
  blog: BlogRecord;
  blog_like: BlogLikeRecord;
  blog_revision: BlogRevisionRecord;
  category: CategoryRecord;
  file: FileRecord;
  project: ProjectRecord;
  session: SessionRecord;
  session_temp: SessionTempRecord;
  shortlink: ShortlinkRecord;
  user: UserRecord;
  user_profile: UserProfileRecord;
  user_two_factor_backup_codes: UserTwoFactorBackupCodesRecord;
};
