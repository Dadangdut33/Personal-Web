import { env } from "@/lib/env.mjs";
import { exec } from "child_process";
import fs from "fs";

// Function to execute a shell command
function runCommand(command: string): Promise<void> {
  return new Promise((resolve, reject) => {
    const process = exec(command, (error, stdout, stderr) => {
      if (error) {
        console.error(`Error: ${error.message}`);
        reject(error);
        return;
      }

      if (stderr) {
        console.error(`${stderr}`);
        reject(new Error(stderr));
        return;
      }

      console.log(`${stdout}`);
      resolve();
    });

    // Forward stdout and stderr from the process to the parent process
    // @ts-ignore
    if (process.stdout) process.stdout.pipe(process.stdout);
    // @ts-ignore
    if (process.stderr) process.stderr.pipe(process.stderr);
  });
}
const main = async () => {
  // First write databaseURL to .xatarc file
  const xataRcFile = JSON.parse(fs.readFileSync(".xatarc", "utf8"));
  xataRcFile.databaseURL = env.DATABASE_URL;
  fs.writeFileSync(".xatarc", JSON.stringify(xataRcFile, null, 2));
  console.log("Database URL written to .xatarc file");
  try {
    console.log("Pulling the latest schema from the database");
    // Run the 'xata pull main' command (make sure xata-cli is installed)
    await runCommand("xata pull main");
    console.log("xata pull main command executed successfully");

    /* What we want to modify:
     - const table -> export const table
     - Remove db url and client generation from the auto-generated file (the last 22 line)
     - Remove the "BaseClientOptions," from import and import { buildClient } from "@xata.io/client";
    */
    console.log("Modifying the auto-generated file");
    const ignoreLineThatIncludes = ["BaseClientOptions", 'import { buildClient } from "@xata.io/client";'];
    let autoGeneratedFile = fs.readFileSync(xataRcFile.codegen.output, "utf8");
    autoGeneratedFile = autoGeneratedFile.replace(
      "Please do not edit.",
      "Modified using xata-pull.ts in script folder. Run db:xata-pull to update the schema."
    );
    autoGeneratedFile = autoGeneratedFile.replace("const table", "export const table");
    autoGeneratedFile = autoGeneratedFile
      .split("\n")
      .slice(0, -22)
      .filter((line) => !ignoreLineThatIncludes.some((ignoreLine) => line.includes(ignoreLine)))
      .join("\n");
    fs.writeFileSync(xataRcFile.codegen.output, autoGeneratedFile);

    console.log("Auto-generated file modified successfully");
  } catch (error) {
    console.error("Command failed", error);
  }

  console.log("Cleaning up...");
  // cleanup:
  // revert the changes to .xatarc file
  xataRcFile.databaseURL = "";
  fs.writeFileSync(".xatarc", JSON.stringify(xataRcFile, null, 2));
  console.log("Done!");
};

main().catch((error) => {
  console.error("An error occured", error);
});
